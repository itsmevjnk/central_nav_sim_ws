<launch>
    <arg name="use_sim_time" default="true" /> <!-- since we're simulating in Gazebo -->

    <arg name="name" />
    <arg name="domain" /> <!-- centralised navigation node's domain -->
    
    <arg name="model" default="waffle" />
    <arg name="map" default="$(find-pkg-share tb3_nav_launch)/map/world.yaml" />

    <arg name="localisation" default="true" />

    <arg name="params_file" default="" /> <!-- if specified will override blind -->

    <arg name="rviz" default="true" />
    <include file="$(find-pkg-share tb3_nav_launch)/launch/rviz_launch.xml" if="$(var rviz)">
        <arg name="use_sim_time" value="$(var use_sim_time)" />
    </include>

    <arg name="blind" default="false" /> <!-- blind navigation (i.e. can't see other robot) -->
    <let name="nav2_params" value="$(var params_file)" />
    <group if="$(eval '\'$(var nav2_params)\' == \'\'')" scoped="false">
        <let if="$(var blind)" name="nav2_params" value="$(find-pkg-share tb3_nav_launch)/config/$(var model)_blind.yaml"/>
        <let unless="$(var blind)" name="nav2_params" value="$(find-pkg-share tb3_nav_launch)/config/$(var model).yaml"/>
    </group>

    <include file="$(find-pkg-share nav2_bringup)/launch/bringup_launch.py" if="$(var localisation)">
        <arg name="use_sim_time" value="$(var use_sim_time)" />
        <arg name="map" value="$(var map)" />
        <arg name="params_file" value="$(var nav2_params)" />
    </include>

    <include file="$(find-pkg-share tb3_nav_launch)/launch/map_navigation_launch.py" unless="$(var localisation)">
        <arg name="use_sim_time" value="$(var use_sim_time)" />
        <arg name="map" value="$(var map)" />
        <arg name="params_file" value="$(var nav2_params)" />
    </include>

    <include file="$(find-pkg-share central_nav)/launch/robot_launch.xml">
        <arg name="name" value="$(var name)" />
        <arg name="domain" value="$(var domain)" />
        <arg name="use_sim_time" value="$(var use_sim_time)" />
    </include>

    <include file="$(find-pkg-share nav2_cancel_stopper)/launch/stopper_launch.xml" />

    <arg name="random" default="false" />
    <arg name="random_max_cost" default="50"/>
    <include file="$(find-pkg-share nav2_random_goal)/launch/global_costmap_launch.xml" if="$(var random)">
        <arg name="max_cost" value="$(var random_max_cost)"/>
        <arg name="always" value="false"/>
    </include>

    <arg name="init_pose" default="true" />
    <arg name="init_x" default="-2.0" />
    <arg name="init_y" default="-0.5" />
    <arg name="init_yaw" default="0.0" />

    <arg name="goal_pose" default="false" />
    <arg name="goal_x" default="2.0" />
    <arg name="goal_y" default="-0.5" />
    <arg name="goal_yaw" default="0.0" />

    <arg name="init_and_goal" default="false" />

    <include file="$(find-pkg-share nav2_oneshot_nodes)/launch/init_and_goal_launch.xml" if="$(var init_and_goal)">
        <arg name="init_x" value="$(var init_x)" />
        <arg name="init_y" value="$(var init_y)" />
        <arg name="init_yaw" value="$(var init_yaw)" />
        <arg name="goal_x" value="$(var goal_x)" />
        <arg name="goal_y" value="$(var goal_y)" />
        <arg name="goal_yaw" value="$(var goal_yaw)" />
        <arg name="use_sim_time" value="$(var use_sim_time)" />
    </include>

    <group scoped="false" unless="$(var init_and_goal)">
        <include file="$(find-pkg-share nav2_oneshot_nodes)/launch/amcl_init_launch.xml" if="$(var init_pose)">
            <arg name="x" value="$(var init_x)" />
            <arg name="y" value="$(var init_y)" />
            <arg name="yaw" value="$(var init_yaw)" />
            <arg name="use_sim_time" value="$(var use_sim_time)" />
        </include>
        <include file="$(find-pkg-share nav2_oneshot_nodes)/launch/goal_launch.xml" if="$(var goal_pose)">
            <arg name="x" value="$(var goal_x)" />
            <arg name="y" value="$(var goal_y)" />
            <arg name="yaw" value="$(var goal_yaw)" />
            <arg name="use_sim_time" value="$(var use_sim_time)" />
        </include>
    </group>
</launch>